<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">
	
	<persistence-unit name="testcarstore"
		transaction-type="RESOURCE_LOCAL">
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore1.Address</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore1.Car</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore1.Customer</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore1.Employee</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore1.Manufacturer</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore1.Person</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore1.UsedCar</class>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:derby:memory:model1;create=true" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />

			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.create-ddl-jdbc-file-name"
				value="createDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.drop-ddl-jdbc-file-name" value="dropDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="both" />
		</properties>
	</persistence-unit>
	
	<persistence-unit name="carstore2test"
		transaction-type="RESOURCE_LOCAL">
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore2.Address</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore2.Car</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore2.Customer</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore2.Employee</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore2.Manufacturer</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore2.Person</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore2.UsedCar</class>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:derby:memory:tcs2;create=true" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />

			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.create-ddl-jdbc-file-name"
				value="createDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.drop-ddl-jdbc-file-name" value="dropDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="both" />
		</properties>
	</persistence-unit>
	
	<persistence-unit name="model1" transaction-type="RESOURCE_LOCAL">
		<class>org.lunifera.dsl.entity.xtext.tests.model1.BaseEntity</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model1.House</class>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:derby:memory:model1;create=true" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />

			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.create-ddl-jdbc-file-name"
				value="createDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.drop-ddl-jdbc-file-name" value="dropDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="both" />
		</properties>
	</persistence-unit>
	
	<persistence-unit name="model2" transaction-type="RESOURCE_LOCAL">
		<class>org.lunifera.dsl.entity.xtext.tests.model2.BaseEntity</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model2.House</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model2.Hotel</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model2.BigHotel</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model2.SmallHotel</class>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:derby:memory:model1;create=true" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />

			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.create-ddl-jdbc-file-name"
				value="createDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.drop-ddl-jdbc-file-name" value="dropDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="both" />
		</properties>
	</persistence-unit>
	
	<persistence-unit name="testcarstore3"
		transaction-type="RESOURCE_LOCAL">
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore3.Car</class>
		<class>org.lunifera.dsl.entity.xtext.tests.model.testcarstore3.Manufacturer</class>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:derby:memory:model1;create=true" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />

			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.create-ddl-jdbc-file-name"
				value="createDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.drop-ddl-jdbc-file-name" value="dropDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="both" />
		</properties>
	</persistence-unit>

	<persistence-unit name="classinheritance"
		transaction-type="RESOURCE_LOCAL">
		<class>org.lunifera.dsl.entity.xtext.tests.classinheritance.BaseByClass</class>
		<class>org.lunifera.dsl.entity.xtext.tests.classinheritance.OneByClass</class>
		<class>org.lunifera.dsl.entity.xtext.tests.classinheritance.TwoByClass</class>
		<class>org.lunifera.dsl.entity.xtext.tests.classinheritance.BaseBySubclass</class>
		<class>org.lunifera.dsl.entity.xtext.tests.classinheritance.OneBySubclass</class>
		<class>org.lunifera.dsl.entity.xtext.tests.classinheritance.TwoBySubclass</class>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:derby:memory:model1;create=true" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />

			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.create-ddl-jdbc-file-name"
				value="createDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.drop-ddl-jdbc-file-name" value="dropDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="both" />
		</properties>
	</persistence-unit>
	
	<persistence-unit name="blobtests"
		transaction-type="RESOURCE_LOCAL">
		<class>org.lunifera.dsl.entity.xtext.tests.blobtests.Foobar</class>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:derby:memory:model1;create=true" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />

			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.create-ddl-jdbc-file-name"
				value="createDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.drop-ddl-jdbc-file-name" value="dropDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="both" />
		</properties>
	</persistence-unit>
	
		<persistence-unit name="selfreftests"
		transaction-type="RESOURCE_LOCAL">
		<class>org.lunifera.dsl.entity.xtext.tests.selfreference.TreeEmployee</class>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:derby:memory:model1;create=true" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />

			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.create-ddl-jdbc-file-name"
				value="createDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.drop-ddl-jdbc-file-name" value="dropDDL_ddlGeneration.jdbc" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="both" />
		</properties>
	</persistence-unit>
	
</persistence> 