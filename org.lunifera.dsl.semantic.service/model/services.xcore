@GenModel(fileExtensions="services")
@GenModel(modelName="Service")
@GenModel(prefix="LunService")
@GenModel(runtimeVersion="2.9")
@GenModel(copyrightText="Copyright (c) 2011 - 2014, Lunifera GmbH (Gross Enzersdorf), Loetz KG (Heidelberg)
 All rights reserved. This program and the accompanying materials 
 are made available under the terms of the Eclipse Public License v1.0 
 which accompanies this distribution, and is available at 
 http://www.eclipse.org/legal/epl-v10.html 

 Based on ideas from Xtext, Xtend, Xcore
   
 Contributors:  
 		Florian Pirchner - Initial implementation 
 ")
@GenModel(operationReflection="false")
@Ecore(nsURI="http://www.lunifera.org/dsl/services/v1")
@Ecore(nsPrefix="services")
@Ecore(rootPackage="services")
package org.lunifera.dsl.semantic.service

import org.eclipse.xtext.common.types.JvmTypeReference
import org.eclipse.xtext.xbase.XExpression
import org.lunifera.dsl.semantic.common.types.LClass
import org.lunifera.dsl.semantic.common.types.LOperation
import org.lunifera.dsl.semantic.common.types.LTypedPackage
import org.lunifera.dsl.semantic.dto.LDto
import org.lunifera.dsl.semantic.dto.LDtoFeature
import org.lunifera.dsl.semantic.common.types.LLazyResolver

class LServiceModel extends LLazyResolver {
	contains LTypedPackage[] packages
}

abstract class LService extends LClass {
	contains LInjectedServices injectedServices
	contains LOperation[] operations
}

class LInjectedServices extends LLazyResolver {
	contains LInjectedService[*] services
}
 
class LInjectedService extends LLazyResolver {
	LCardinality cardinality
	String attributeName
	contains JvmTypeReference service
}

class LDTOService extends LService {
	refers LDto dto
	contains JvmTypeReference dtoJvm
	String persistenceId
	contains LFilterableAttributes filterable opposite parent
	contains LSortableAttributes sortable opposite parent
	 
	contains XExpression getExpression
	contains XExpression findExpression
	contains XExpression findExpressionWithDelimiter
	contains XExpression updateExpression
	contains XExpression deleteExpression
}

class LFilterableAttributes extends LLazyResolver {
	refers LDTOService parent opposite filterable
	refers LDtoFeature[*] filterableFeatures
}

class LSortableAttributes extends LLazyResolver {
	refers LDTOService parent opposite sortable
	refers LDtoFeature[*] sortableFeatures
}

class LChartService extends LService {
}

class LFreeService extends LService {
}

enum LCardinality {
	ZERO_TO_ONE, ONE_TO_ONE, ZERO_TO_MANY, ONE_TO_MANY 
}
