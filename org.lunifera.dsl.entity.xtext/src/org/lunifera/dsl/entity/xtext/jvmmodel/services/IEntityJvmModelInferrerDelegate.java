/**
 * Copyright (c) 2011 - 2012, Florian Pirchner - lunifera.org
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Sources generated by Xtext  
 * 
 * Contributors:
 *  		Florian Pirchner - Initial implementation
 */
package org.lunifera.dsl.entity.xtext.jvmmodel.services;

import org.eclipse.xtext.xbase.jvmmodel.IJvmDeclaredTypeAcceptor;
import org.lunifera.dsl.entity.semantic.model.LCompilerType;
import org.lunifera.dsl.entity.semantic.model.LEntity;
import org.lunifera.dsl.entity.semantic.model.LEnum;

@SuppressWarnings("restriction")
public interface IEntityJvmModelInferrerDelegate {

	/**
	 * Returns true if this modelInferrer is responsible for the given compiler type
	 * @param lCompilerType
	 */
	boolean isResponsible(LCompilerType lCompilerType);
	
	/**
	 * Is called to infer the entity.
	 * 
	 * @param e
	 * @param acceptor
	 * @param isPrelinkingPhase
	 */
	void infer(LEntity e, IJvmDeclaredTypeAcceptor acceptor,
			boolean isPrelinkingPhase);

	/**
	 * Is called to infer the enum.
	 * 
	 * @param e
	 * @param acceptor
	 * @param isPrelinkingPhase
	 */
	void infer(LEnum e, IJvmDeclaredTypeAcceptor acceptor,
			boolean isPrelinkingPhase);
}
