package org.lunifera.dsl.metadata.api.^dto {
	
	import org.lunifera.dsl.metadata.api.types.*;
	import org.lunifera.dsl.metadata.api.entity.*;
	
	
	datatype DtoFeatureList jvmType java.util.List<DtoFeatureDTO>;
	datatype OperationsList jvmType java.util.List<DtoOperationDTO>;
	datatype DtoReferenceList jvmType java.util.List<DtoReferenceDTO>;
	datatype DtoAttributeList jvmType java.util.List<DtoAttributeDTO>;
	
//	dto DtoModelDTO {
//		ref cascade TypedPackageDTO[*] packages opposite dtomodel;
//	}
	
	
	dto DtoDTO {
		ref cascade DtoFeatureDTO[*] features opposite ^dto;
		ref DtoDTO superType opposite subTypes; //local
		ref DtoDTO[*] subTypes opposite superType;  //transient
		ref TypeDTO wrappedType;
		
	}
	
	dto DtoMapperDTO {
//		ref cascade XExpression toDTO;
//		ref cascade XExpression fromDTO;
	}
	
	dto DtoFeatureDTO extends FeatureDTO {
		ref DtoDTO ^dto opposite features;
		ref cascade DtoMapperDTO mapper;
	}
	
	dto DtoAbstractAttributeDTO extends DtoFeatureDTO {
		var boolean ^id;
		var boolean ^uuid;
		var boolean version;
		var boolean ^lazy;
		var boolean cascading; 
		var boolean ^transient;
		var boolean ^derived;
//		ref cascade XExpression derivedGetterExpression;
		ref ScalarTypeDTO ^type;
	}
	
	dto DtoInheritedAttributeDTO extends DtoAbstractAttributeDTO {
		ref AttributeDTO inheritedFeature;
		
	}
	
	dto DtoAttributeDTO extends DtoAbstractAttributeDTO {
	}
	
	dto DtoAbstractReferenceDTO extends DtoFeatureDTO {
		ref DtoDTO ^type;
		var boolean lazy;
		var boolean cascading;	
	}
	
	dto DtoInheritedReferenceDTO extends DtoAbstractReferenceDTO {
		ref ReferenceDTO inheritedFeature;
	}
	
	dto DtoReferenceDTO  extends DtoAbstractReferenceDTO {
		ref DtoReferenceDTO ^opposite;
	}
	
	dto DtoOperationDTO extends DtoFeatureDTO {
	}
	
	
	

}