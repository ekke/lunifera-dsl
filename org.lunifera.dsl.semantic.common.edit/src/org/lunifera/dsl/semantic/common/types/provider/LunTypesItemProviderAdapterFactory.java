/**
 * Copyright (c) 2011 - 2014, Lunifera GmbH (Gross Enzersdorf), Loetz KG (Heidelberg)
 *  All rights reserved. This program and the accompanying materials 
 *  are made available under the terms of the Eclipse Public License v1.0 
 *  which accompanies this distribution, and is available at 
 *  http://www.eclipse.org/legal/epl-v10.html 
 * 
 *  Based on ideas from Xtext, Xtend, Xcore
 *   
 *  Contributors:  
 *  		Florian Pirchner - Initial implementation 
 *  
 */
package org.lunifera.dsl.semantic.common.types.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.lunifera.dsl.semantic.common.types.LunTypesPackage;
import org.lunifera.dsl.semantic.common.types.util.LunTypesAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class LunTypesItemProviderAdapterFactory extends LunTypesAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(TypesEditPlugin.INSTANCE, LunTypesPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public LunTypesItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LCommonModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LCommonModelItemProvider lCommonModelItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LCommonModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLCommonModelAdapter() {
		if (lCommonModelItemProvider == null) {
			lCommonModelItemProvider = new LCommonModelItemProvider(this);
		}

		return lCommonModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LLazyResolver} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LLazyResolverItemProvider lLazyResolverItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LLazyResolver}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLLazyResolverAdapter() {
		if (lLazyResolverItemProvider == null) {
			lLazyResolverItemProvider = new LLazyResolverItemProvider(this);
		}

		return lLazyResolverItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LPackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LPackageItemProvider lPackageItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLPackageAdapter() {
		if (lPackageItemProvider == null) {
			lPackageItemProvider = new LPackageItemProvider(this);
		}

		return lPackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LTypedPackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LTypedPackageItemProvider lTypedPackageItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LTypedPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLTypedPackageAdapter() {
		if (lTypedPackageItemProvider == null) {
			lTypedPackageItemProvider = new LTypedPackageItemProvider(this);
		}

		return lTypedPackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LImport} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LImportItemProvider lImportItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LImport}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLImportAdapter() {
		if (lImportItemProvider == null) {
			lImportItemProvider = new LImportItemProvider(this);
		}

		return lImportItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LTypeItemProvider lTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLTypeAdapter() {
		if (lTypeItemProvider == null) {
			lTypeItemProvider = new LTypeItemProvider(this);
		}

		return lTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LAnnotationDef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LAnnotationDefItemProvider lAnnotationDefItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LAnnotationDef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLAnnotationDefAdapter() {
		if (lAnnotationDefItemProvider == null) {
			lAnnotationDefItemProvider = new LAnnotationDefItemProvider(this);
		}

		return lAnnotationDefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LAnnotationTarget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LAnnotationTargetItemProvider lAnnotationTargetItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LAnnotationTarget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLAnnotationTargetAdapter() {
		if (lAnnotationTargetItemProvider == null) {
			lAnnotationTargetItemProvider = new LAnnotationTargetItemProvider(this);
		}

		return lAnnotationTargetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LScalarType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LScalarTypeItemProvider lScalarTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LScalarType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLScalarTypeAdapter() {
		if (lScalarTypeItemProvider == null) {
			lScalarTypeItemProvider = new LScalarTypeItemProvider(this);
		}

		return lScalarTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDataTypeItemProvider lDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDataTypeAdapter() {
		if (lDataTypeItemProvider == null) {
			lDataTypeItemProvider = new LDataTypeItemProvider(this);
		}

		return lDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LEnum} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LEnumItemProvider lEnumItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LEnum}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLEnumAdapter() {
		if (lEnumItemProvider == null) {
			lEnumItemProvider = new LEnumItemProvider(this);
		}

		return lEnumItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LEnumLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LEnumLiteralItemProvider lEnumLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LEnumLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLEnumLiteralAdapter() {
		if (lEnumLiteralItemProvider == null) {
			lEnumLiteralItemProvider = new LEnumLiteralItemProvider(this);
		}

		return lEnumLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LClassItemProvider lClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLClassAdapter() {
		if (lClassItemProvider == null) {
			lClassItemProvider = new LClassItemProvider(this);
		}

		return lClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LKeyAndValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LKeyAndValueItemProvider lKeyAndValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LKeyAndValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLKeyAndValueAdapter() {
		if (lKeyAndValueItemProvider == null) {
			lKeyAndValueItemProvider = new LKeyAndValueItemProvider(this);
		}

		return lKeyAndValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LOperationItemProvider lOperationItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLOperationAdapter() {
		if (lOperationItemProvider == null) {
			lOperationItemProvider = new LOperationItemProvider(this);
		}

		return lOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LModifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LModifierItemProvider lModifierItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LModifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLModifierAdapter() {
		if (lModifierItemProvider == null) {
			lModifierItemProvider = new LModifierItemProvider(this);
		}

		return lModifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LMultiplicity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LMultiplicityItemProvider lMultiplicityItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LMultiplicity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLMultiplicityAdapter() {
		if (lMultiplicityItemProvider == null) {
			lMultiplicityItemProvider = new LMultiplicityItemProvider(this);
		}

		return lMultiplicityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LResultFilters} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LResultFiltersItemProvider lResultFiltersItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LResultFilters}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLResultFiltersAdapter() {
		if (lResultFiltersItemProvider == null) {
			lResultFiltersItemProvider = new LResultFiltersItemProvider(this);
		}

		return lResultFiltersItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LAttributeMatchingConstraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LAttributeMatchingConstraintItemProvider lAttributeMatchingConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LAttributeMatchingConstraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLAttributeMatchingConstraintAdapter() {
		if (lAttributeMatchingConstraintItemProvider == null) {
			lAttributeMatchingConstraintItemProvider = new LAttributeMatchingConstraintItemProvider(this);
		}

		return lAttributeMatchingConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCAssertFalse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCAssertFalseItemProvider lDtCAssertFalseItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCAssertFalse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCAssertFalseAdapter() {
		if (lDtCAssertFalseItemProvider == null) {
			lDtCAssertFalseItemProvider = new LDtCAssertFalseItemProvider(this);
		}

		return lDtCAssertFalseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCAssertTrue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCAssertTrueItemProvider lDtCAssertTrueItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCAssertTrue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCAssertTrueAdapter() {
		if (lDtCAssertTrueItemProvider == null) {
			lDtCAssertTrueItemProvider = new LDtCAssertTrueItemProvider(this);
		}

		return lDtCAssertTrueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCDecimalMax} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCDecimalMaxItemProvider lDtCDecimalMaxItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCDecimalMax}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCDecimalMaxAdapter() {
		if (lDtCDecimalMaxItemProvider == null) {
			lDtCDecimalMaxItemProvider = new LDtCDecimalMaxItemProvider(this);
		}

		return lDtCDecimalMaxItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCDecimalMin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCDecimalMinItemProvider lDtCDecimalMinItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCDecimalMin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCDecimalMinAdapter() {
		if (lDtCDecimalMinItemProvider == null) {
			lDtCDecimalMinItemProvider = new LDtCDecimalMinItemProvider(this);
		}

		return lDtCDecimalMinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCDigits} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCDigitsItemProvider lDtCDigitsItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCDigits}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCDigitsAdapter() {
		if (lDtCDigitsItemProvider == null) {
			lDtCDigitsItemProvider = new LDtCDigitsItemProvider(this);
		}

		return lDtCDigitsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCFuture} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCFutureItemProvider lDtCFutureItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCFuture}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCFutureAdapter() {
		if (lDtCFutureItemProvider == null) {
			lDtCFutureItemProvider = new LDtCFutureItemProvider(this);
		}

		return lDtCFutureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCPast} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCPastItemProvider lDtCPastItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCPast}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCPastAdapter() {
		if (lDtCPastItemProvider == null) {
			lDtCPastItemProvider = new LDtCPastItemProvider(this);
		}

		return lDtCPastItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCNumericMax} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCNumericMaxItemProvider lDtCNumericMaxItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCNumericMax}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCNumericMaxAdapter() {
		if (lDtCNumericMaxItemProvider == null) {
			lDtCNumericMaxItemProvider = new LDtCNumericMaxItemProvider(this);
		}

		return lDtCNumericMaxItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCNumericMin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCNumericMinItemProvider lDtCNumericMinItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCNumericMin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCNumericMinAdapter() {
		if (lDtCNumericMinItemProvider == null) {
			lDtCNumericMinItemProvider = new LDtCNumericMinItemProvider(this);
		}

		return lDtCNumericMinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCNotNull} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCNotNullItemProvider lDtCNotNullItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCNotNull}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCNotNullAdapter() {
		if (lDtCNotNullItemProvider == null) {
			lDtCNotNullItemProvider = new LDtCNotNullItemProvider(this);
		}

		return lDtCNotNullItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCNull} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCNullItemProvider lDtCNullItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCNull}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCNullAdapter() {
		if (lDtCNullItemProvider == null) {
			lDtCNullItemProvider = new LDtCNullItemProvider(this);
		}

		return lDtCNullItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCRegEx} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCRegExItemProvider lDtCRegExItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCRegEx}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCRegExAdapter() {
		if (lDtCRegExItemProvider == null) {
			lDtCRegExItemProvider = new LDtCRegExItemProvider(this);
		}

		return lDtCRegExItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.lunifera.dsl.semantic.common.types.LDtCSize} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LDtCSizeItemProvider lDtCSizeItemProvider;

	/**
	 * This creates an adapter for a {@link org.lunifera.dsl.semantic.common.types.LDtCSize}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLDtCSizeAdapter() {
		if (lDtCSizeItemProvider == null) {
			lDtCSizeItemProvider = new LDtCSizeItemProvider(this);
		}

		return lDtCSizeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (lCommonModelItemProvider != null) lCommonModelItemProvider.dispose();
		if (lLazyResolverItemProvider != null) lLazyResolverItemProvider.dispose();
		if (lPackageItemProvider != null) lPackageItemProvider.dispose();
		if (lTypedPackageItemProvider != null) lTypedPackageItemProvider.dispose();
		if (lImportItemProvider != null) lImportItemProvider.dispose();
		if (lTypeItemProvider != null) lTypeItemProvider.dispose();
		if (lAnnotationDefItemProvider != null) lAnnotationDefItemProvider.dispose();
		if (lAnnotationTargetItemProvider != null) lAnnotationTargetItemProvider.dispose();
		if (lScalarTypeItemProvider != null) lScalarTypeItemProvider.dispose();
		if (lDataTypeItemProvider != null) lDataTypeItemProvider.dispose();
		if (lEnumItemProvider != null) lEnumItemProvider.dispose();
		if (lEnumLiteralItemProvider != null) lEnumLiteralItemProvider.dispose();
		if (lClassItemProvider != null) lClassItemProvider.dispose();
		if (lKeyAndValueItemProvider != null) lKeyAndValueItemProvider.dispose();
		if (lOperationItemProvider != null) lOperationItemProvider.dispose();
		if (lModifierItemProvider != null) lModifierItemProvider.dispose();
		if (lMultiplicityItemProvider != null) lMultiplicityItemProvider.dispose();
		if (lResultFiltersItemProvider != null) lResultFiltersItemProvider.dispose();
		if (lAttributeMatchingConstraintItemProvider != null) lAttributeMatchingConstraintItemProvider.dispose();
		if (lDtCAssertFalseItemProvider != null) lDtCAssertFalseItemProvider.dispose();
		if (lDtCAssertTrueItemProvider != null) lDtCAssertTrueItemProvider.dispose();
		if (lDtCDecimalMaxItemProvider != null) lDtCDecimalMaxItemProvider.dispose();
		if (lDtCDecimalMinItemProvider != null) lDtCDecimalMinItemProvider.dispose();
		if (lDtCDigitsItemProvider != null) lDtCDigitsItemProvider.dispose();
		if (lDtCFutureItemProvider != null) lDtCFutureItemProvider.dispose();
		if (lDtCPastItemProvider != null) lDtCPastItemProvider.dispose();
		if (lDtCNumericMaxItemProvider != null) lDtCNumericMaxItemProvider.dispose();
		if (lDtCNumericMinItemProvider != null) lDtCNumericMinItemProvider.dispose();
		if (lDtCNotNullItemProvider != null) lDtCNotNullItemProvider.dispose();
		if (lDtCNullItemProvider != null) lDtCNullItemProvider.dispose();
		if (lDtCRegExItemProvider != null) lDtCRegExItemProvider.dispose();
		if (lDtCSizeItemProvider != null) lDtCSizeItemProvider.dispose();
	}

}
