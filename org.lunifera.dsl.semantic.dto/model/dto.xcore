@GenModel(fileExtensions="dtomodel")
@GenModel(modelName="DTO")
@GenModel(prefix="Dto")
@Ecore(nsURI="http://www.lunifera.org/dsl/dto/v1")
@Ecore(nsPrefix="dto")
@Ecore(rootPackage="dto")
package org.lunifera.dsl.semantic.dto

import org.lunifera.dsl.semantic.common.types.LTypedPackage
import org.lunifera.dsl.semantic.common.types.LClass
import org.lunifera.dsl.semantic.common.types.LScalarType
import org.lunifera.dsl.semantic.common.types.LFeature
import org.lunifera.dsl.semantic.common.types.LAttribute
import org.lunifera.dsl.semantic.common.types.LReference
import org.eclipse.xtext.xbase.XExpression
import org.lunifera.dsl.semantic.common.types.LType
import java.util.List
import org.lunifera.dsl.semantic.common.types.FeaturesList
import org.lunifera.dsl.semantic.common.types.LFeaturesHolder

class LDtoModel {
	contains LTypedPackage[] packages
}

/**
 * A bean is an embeddable element that may become added to a entity using the @embedd annotation. 
 */
class LDto extends LClass, LFeaturesHolder {
	contains LDtoFeature[] features
	refers local LDto superType opposite subTypes
	refers transient LDto[] subTypes opposite superType
	refers local LType wrappedType
	
	/** 
 	 * Returns all features of type LOperation
 	 */
	op OperationsList getOperations() {
		features.filter(typeof(LDtoOperation)).toList
	}
	/**
 	 * Returns all features of type LDtoReference
 	 */
	op DtoReferenceList getReferences() {
		features.filter(typeof(LDtoReference)).toList
	}
	/**
 	 * Returns all features of type LDtoAttribute
 	 */
	op DtoAttributeList getAttributes() {
		features.filter(typeof(LDtoAttribute)).toList
	}
	
		/**
	 * Returns all features of the holder and from super types
	 */
	op FeaturesList getAllFeatures() {
		val List<LDtoFeature> result = newArrayList()
		collectAllLunFeatures(result)
		return result
	}
	
	op void collectAllLunFeatures(LDto current, DtoFeatureList result) {
		if (current == null) {
			return
		}

		// collect from current feature
		result.addAll(current.features)

		// call for super class
		current.superType.collectAllLunFeatures(result)
	}
}

class LDtoFeature extends LFeature {
	op LDto getDTO() {
		return eContainer as LDto
	}
}

class LDtoAttribute extends LDtoFeature, LAttribute {
}

class LDtoReference extends LDtoFeature, LReference {
	refers LDto ^type
	refers LDtoReference ^opposite
}

class LDtoWrappedReference extends LDtoFeature {
	refers LFeature feature
	refers LScalarType asType
	contains XExpression convertToDTO
	contains XExpression convertFromDTO
}

/**
 * Overwrites LOperation to add dto feature as supertype
 */
class LDtoOperation extends org.lunifera.dsl.semantic.common.types.LOperation, LDtoFeature {
}

type DtoFeatureList wraps java.util.List<LDtoFeature>

type OperationsList wraps java.util.List<LDtoOperation>

type DtoReferenceList wraps java.util.List<LDtoReference>

type DtoAttributeList wraps java.util.List<LDtoAttribute>

	
	
	
	
	