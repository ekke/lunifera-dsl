grammar org.lunifera.dsl.dto.xtext.DtoGrammar with org.lunifera.dsl.common.xtext.CommonGrammar

import "http://www.lunifera.org/dsl/dto/v1" as dto
import "http://www.lunifera.org/dsl/common/types/v1" as common
import "http://www.lunifera.org/dsl/entity/v1" as entity
import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase
import "http://www.eclipse.org/xtext/xbase/Xtype" as xtype
import "http://www.eclipse.org/Xtext/Xbase/XAnnotations" as xannotation
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types

LDTOModel returns dto::LDtoModel:
	packages+=TypedPackage*;

Class returns dto::LDto:
	{dto::LDto} annotations+=AnnotationDef*
	{dto::LDto.annotationInfo=current}
	'dto' name=ValidIDWithKeywords ('extends' superType=[dto::LDto])? ('wraps' wrappedType=[entity::LEntity])?
	'{'
	features+=DtoFeature*
	'}';

DtoFeature returns dto::LDtoFeature:
	{dto::LDtoFeature}
	annotations+=AnnotationDef*
	(({dto::LDtoAttribute.annotationInfo=current}
	(inherit?='inherit var' inheritedFeature=[entity::LEntityAttribute]) ';')
	|
	({dto::LDtoReference.annotationInfo=current}
	(inherit?='inherit ref' inheritedFeature=[entity::LEntityReference]) 'asType' type=[dto::LDto] ';')
	|
	({dto::LDtoAttribute.annotationInfo=current}
	(('transient' type=[common::LScalarType] name=ValidIDWithKeywords ';')
	|
	((id?='id' | version?="version") type=[common::LScalarType] multiplicity=Multiplicity?
	name=ValidIDWithKeywords
	';')
	|
	('var' type=[common::LScalarType] multiplicity=Multiplicity?
	name=ValidIDWithKeywords (mapper=DtoMapper)?
	';'))));

DtoMapper returns dto::LDtoMapper:
	'{' 'toDTO'
	toDTO=XClosure
	('fromDTO'
	fromDTO=XClosure)?
	'}';
