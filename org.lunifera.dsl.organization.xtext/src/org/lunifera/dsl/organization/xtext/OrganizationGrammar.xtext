/*******************************************************************************
 * Copyright (c) 2011, 2012 Cristiano Gavião - Lunifera.org.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Cristiano Gavião - initial API and implementation
 *******************************************************************************/
grammar org.lunifera.dsl.organization.xtext.OrganizationGrammar with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.lunifera.org/dsl/organization/v1"

OrganizationModel returns OOrganizationModel:
	((root=HierarchyRoot)? &
	(businessRoles+=BusinessRole)*)
;

HierarchyRoot returns OHierarchyRoot:
	'hierachy' name=ID '{'
		organizations+=Organization*
	'}'
;

Organization returns OOrganization:
	'organization' name=ID ('{'
		(('name' longName=STRING)? &
		('version' version=Fqn)? &
		('description' description=STRING)? &
		(elements+=OrganizationMember)*)
	'}')?;

UnitRole returns OUnitRole:
	'business-role' name=ID ('{'
		(('name' longName=STRING)? & 
		('description' description=STRING)?) 
	'}')?
;

PersonRole returns OPersonRole:
	'person-role' name=ID ('{'
		(('name' longName=STRING)? & 
		('description' description=STRING)?) 
	'}')?
;

BusinessRole returns OBusinessRole:
	UnitRole | PersonRole
;

OrganizationMember returns OOrganizationMember:
	Unit | Person | Worker | Group;

Unit returns OUnit:
	'unit' name=Fqn ('subunit-of' parent=[OUnit|Fqn])?
	('{'
		(('name' longName=STRING)? &
		('description' description=STRING)? &
		('playRoles' '('playRoles+=[OUnitRole|Fqn] (',' playRoles+=[OUnitRole|Fqn])* ')')?)
	'}')?;

Person returns OPerson:
	'person' name=ID
	('{'
		(('first name' firstName=STRING)? &
		('middle name' middleName=STRING)? &
		('last name' lastName=STRING)? &
		('email' email=STRING)?)
	'}')?
;

Worker returns OWorker:
// must filter persons. must show only Partners and Own Company persons.
	'worker' person=[OPerson|Fqn] ('{' 
		(('allocatedOn' allocationUnit=[OUnit|Fqn])? & 
    	('playRoles' '('playRoles+=[OPersonRole|Fqn] (',' playRoles+=[OPersonRole|Fqn])* ')')?) 
	'}')?
;

Group returns OGroup:
	'group' name=ID ('{'
		(('name' longName=STRING)? &
		('description' description=STRING)?)
		('worker' workers+=[OWorker|Fqn])* 
	'}')?
;

//Partnership returns OPartnership:
//	'partnership' 'with' company=[OOrganization|Fqn] ('{' 
//		('responsible' responsible=[OWorker|Fqn])? 
//		('agreement'agreement=STRING)? 
//	'}')?;

FqnWithWildCard:
	Fqn ('.' '*')?;

Fqn:
	ValidID (=> '.' ValidID)*;

ValidID:
	ID;
